SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Records of cms_ad
-- ----------------------------
INSERT INTO `cms_ad` VALUES (1, 1, 0, 'banner-01', NULL, '/image/banner_01.png', '2020-02-26 16:51:39', '2050-02-26 16:51:44', NULL, NULL, NULL, 0, 1, '2020-02-26 16:52:42', '/static/images/banner1.jpg');

-- ----------------------------
-- Records of cms_ad_position
-- ----------------------------
INSERT INTO `cms_ad_position` VALUES (1, 1, '首页大轮播图', 'home_banner', 1920, 516, NULL, NULL, '', 1, NULL, '2020-02-26 16:49:09');

-- ----------------------------
-- Records of cms_article
-- ----------------------------
INSERT INTO `cms_article` VALUES (1, 2, '【告别2016】耕耘才有所得，付出才有收获', NULL, 'title', 'title', '1', NULL, '2020-02-26 17:36:44', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '中五年内', '1', NULL, '/image/news1.png');
INSERT INTO `cms_article` VALUES (2, 2, '【告别2015】耕耘才有所得，付出才有收获', NULL, 'title', 'title', NULL, NULL, '2020-02-26 17:36:44', '2020-07-16 03:15:35', 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '中五年内', '1', NULL, '/image/news1.png');
INSERT INTO `cms_article` VALUES (3, 2, '【告别2014】耕耘才有所得，付出才有收获', NULL, 'title', 'title', NULL, NULL, '2020-02-26 17:36:44', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 0, '中五年内', '1', NULL, '/image/news1.png');
INSERT INTO `cms_article` VALUES (4, 2, '【告别2013】耕耘才有所得，付出才有收获', NULL, 'title', 'title', NULL, NULL, '2020-02-26 17:36:44', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '中五年内', '1', NULL, '/image/news1.png');
INSERT INTO `cms_article` VALUES (5, 2, '【告别2012】耕耘才有所得，付出才有收获', NULL, 'title', 'title', NULL, NULL, '2020-02-26 17:36:44', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '中五年内', '1', NULL, '/image/news1.png');
INSERT INTO `cms_article` VALUES (11, 3, '遇见一个未知的你', NULL, NULL, '听着那熟悉的歌曲 &amp;shy;看着那一张张可爱的图片 &amp;shy;读着我们共同欣赏的诗&amp;hellip;&amp;hellip; &amp;shy;也许我们曾经相遇\n                    &amp;shy; &amp;shy;看着你远去的背影 &amp;shy;沿着你来的方向 &amp;sh', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (12, 3, 'Apache Solr velocity模板注入RCE漏洞', NULL, NULL, 'Solr是一个独立的企业级搜索应用服务器，它对外提供类似于Web-service的API接口。用户可以通过http请求，向搜索引擎服务器提交一定格式的XML文件，生成索引；也可以通过Http Get操作提出查找请求，并得到XML格式的返回结果。', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (13, 3, '严重GRUB2 Bootloader漏洞影响数十亿Linux和Windows系统', NULL, NULL, '因该漏洞位于GRUB2引导程序中，所以被称为“ BootHole ”，并被标记为CVE-2020-10713。一旦被利用，该漏洞可让攻击者避开安全启动功能，并获得高度特权，隐身访问目标系统。', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (14, 3, '潜伏十年“黑客雇佣军团”曝光 ，盯上欧洲律师事务所', NULL, NULL, '今年继Dark Basin黑客雇佣组织曝光后，卡巴斯基发现第二个黑客雇佣组织Deceptikons听着那熟悉的歌曲 &amp;shy;看着那一张张可爱的图片 &amp;shy;读着我们共同欣赏的诗&amp;hellip;&amp;hellip; &amp;shy;也许我们曾经相遇\n                    &amp;shy; &amp;shy;看着你远去的背影 &amp;shy;沿着你来的方向 &amp;sh', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (15, 18, '华语黑产组织与境外老牌组织合作分发Ghost木马计划曝光', NULL, NULL, '近期，奇安信病毒响应中心在日常跟踪黑产团伙过程中，发现了金眼狗团伙更新了其攻击手法，与国外分发商进行合作，开始向国内企业投递中文垃圾邮件。', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (16, 13, '【告别2011】耕耘才有所得，付出才有收获', NULL, NULL, '防盗门', NULL, NULL, '2020-03-10 13:48:00', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...<pre><code><ol><li>import Vue from \'vue\'</li></ol>function DataTransfer (data) {<br>  if (!(this instanceof DataTransfer)) {<br>    return new DataTransfer(data, null, null)<br>  }<br>}<br>// 数据转换<br>DataTransfer.treeToArray = function (data, parent, level, expandedAll) {<br>  let tmp = []<br>  Array.from(data).forEach(function (record) {<br>    if (record._expanded === undefined) {<br>      Vue.set(record, \'_expanded\', expandedAll)<br>    }<br>    if (parent) {<br>      Vue.set(record, \'_parent\', parent)<br>    }<br>    let _level = 0<br>    if (level !== undefined &amp;&amp; level !== null) {<br>      _level = level + 1<br>    }<br>    Vue.set(record, \'_level\', _level)<br>    tmp.push(record)<br>    if (record.children &amp;&amp; record.children.length &gt; 0) {<br>      let children = DataTransfer.treeToArray(record.children, record, _level, expandedAll)<br>      tmp = tmp.concat(children)<br>    }<br>  })<br>  <br>  return tmp<br>}<br><br>export default DataTransfer</code></pre><p><br></p>', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (17, 17, 'Palo Alto Networks研究人员披露Kubernetes安全漏洞', NULL, NULL, 'Palo Alto Netwoks公司威胁情报团队Unit 42披露了Kubernetes中的一个安全漏洞CVE-2020-8558。攻击者', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (19, 16, '【告别2018】耕耘才有所得，付出才有收获', NULL, NULL, '网站模板我更新速度是很慢的，数了一下，大概12个模板，不多，但是每一套个人博客网站模板都是我精心设计的，期间认识了很多做优化的朋友还有客户，根据他们的要求还有建议，我又做了很多调整，无论是静态模板的编写还是后台调用方式上，都有很大的进步，我这一年的时间，比我7年加起来的收获还要多。', NULL, NULL, '2020-03-07 16:23:56', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583487009632&di=1cf4809627393d35b161aef14aeb09e6&imgtype=0&src=http%3A%2F%2Fa2.att.hudong.com%2F36%2F48%2F19300001357258133412489354717.jpg');
INSERT INTO `cms_article` VALUES (21, 9, '个人博客，属于我的小世界！', NULL, NULL, '个人博客，用来做什么？我刚开始就把它当做一个我吐槽心情的地方，也就相当于一个网络记事本，写上一些关于自己生活工作中的小情小事，也会放上一些照片，音乐。每天工作回家后就能访问自己的网站，一边听着音乐，一边写写文章。', NULL, NULL, '2020-03-10 15:01:43', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (22, 10, '波士顿附近的', NULL, NULL, '那就看你', NULL, NULL, '2020-03-12 16:45:00', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 0, 1, '写点什么...<p>就看看</p>', '1', NULL, 'http://my.cdn.dev56.com/images/2020/03/12/15839488754892.jpg');
INSERT INTO `cms_article` VALUES (24, 5, '同态加密：实现数据的“可算不可见”', NULL, NULL, '同态加密是密码学领域自1978年以来的经典难题，也是实现数据隐私计算的关键技术，在云计算、区块链、隐私计算等领域均存在着广泛的应用需求和一些可行的应用方案。', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (25, 5, '暗网黑产商品价格指数', NULL, NULL, '同态加密是密码学领域自1978年以来的经典难题，也是实现数据隐私计算的关键技术，在云计算、区块链、隐私计算等领域均存在着广泛的应用需求和一些可行的应用方案。', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://image.3001.net/images/20200722/1595395433.jpg!small');
INSERT INTO `cms_article` VALUES (26, 5, '等保测评2.0：Oracle安全审计（下）', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://image.3001.net/images/20200718/1595078516.png!small');
INSERT INTO `cms_article` VALUES (27, 5, '等保测评2.0：Oracle安全审计（上）', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://image.3001.net/images/20200718/1595078516.png!small');
INSERT INTO `cms_article` VALUES (28, 5, 'CIPM注册信息隐私管理师认证考试经验分享', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://image.3001.net/images/20200715/1594791879.png!small');
INSERT INTO `cms_article` VALUES (29, 5, '今夕何夕》Html5响应式个人博客网站模板', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (30, 5, '今夕何夕》Html5响应式个人博客网站模板', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (31, 5, '今夕何夕》Html5响应式个人博客网站模板', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (32, 5, '今夕何夕》Html5响应式个人博客网站模板', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (33, 5, '今夕何夕》Html5响应式个人博客网站模板', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (34, 5, '今夕何夕》Html5响应式个人博客网站模板', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (35, 5, '今夕何夕》Html5响应式个人博客网站模板', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, '/static/images/pic03.jpg');
INSERT INTO `cms_article` VALUES (36, 4, '腾讯QQ下载v9.1.1.24953 最新版', NULL, NULL, '提供QQ下载2018正式版官方免费下载，经过不断的更新，现在的PC端QQ已经是非常成熟的聊天软件了，新版本带来了全新的界面，集成的聊天窗口吸收了QQforMac的界面元素', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, '/static/images/ex01.png');
INSERT INTO `cms_article` VALUES (37, 4, '腾讯tim(QQ简洁版) v2.3.1.20994 官方最新版', NULL, NULL, 'HBuilderX是编辑器和IDE的完美结合，HBuilderX是HBuilder的下一代产品，体积小巧，启动秒开，默认包包含优秀的字处理能力，创新众多其他编辑器不具备的高效字处理模型。', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, '/static/images/ex02.png');
INSERT INTO `cms_article` VALUES (38, 4, '营销qq2019最新版 v2.21.2927 官方版', NULL, NULL, 'HBuilderX是编辑器和IDE的完美结合，HBuilderX是HBuilder的下一代产品，体积小巧，启动秒开，默认包包含优秀的字处理能力，创新众多其他编辑器不具备的高效字处理模型。', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, '/static/images/ex03.png');
INSERT INTO `cms_article` VALUES (39, 22, '企业网站建设前期，公司该做什么样的网站？要看企业如何定位自身', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (40, 22, '企业网站建设价格根据什么来定价的？', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (41, 7, '企业网站建设前期，公司该做什么样的网站？要看企业如何定位自身', NULL, NULL, '', NULL, NULL, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, '/static/images/pic09.jpg');
INSERT INTO `cms_article` VALUES (42, 19, '个人博客，我为什么要用帝国cms？', NULL, NULL, '选择帝国cms，做一个博客系统，很多人都说是大材小用。确实是有那种感觉，因为cms有很多功能表用不上。但是帝国cms的安装包也就才6M，如果你放一张高清的1920的图，都比这安装包大！我就来说一说我为什么要用帝国cms。', 'vito', 1, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, '/static/images/pic06.jpg');
INSERT INTO `cms_article` VALUES (43, 19, '作为一个设计师,如果遭到质疑你是否能恪守自己的原则?', NULL, NULL, '矛盾了很长时间，莱伊恩终于想到了一条妙计，他在大厅里加了四根柱子，但它们并未与天花板连接，只不过是装装样子，糊弄那些刚愎自用的家伙。这个秘密始终没有被发现。直到300多年后市政府准备修缮大厅天花板时，才发现莱伊恩的“弄虚作假”。', 'vito', 1, '2020-03-10 15:00:28', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '<br>曾经有站长找我求助，他说他不知道该怎么办，自己做出来的网站，不仅没有得到大家的认可，反而让大家给他开了一个评判大会。他自己认为已经是做的最好的，却遭受大家无情的指责是&ldquo;垃圾&rdquo;作品。<br><br>有的给他提出了意见，有的没有提意见，直接扔了两个字，&ldquo;垃圾&rdquo;。这没有谁对谁错，每个人的审美观点都不一样，我们能做的就是尊重别人。我相信他是认真对待网站的，我仔细看了他的设计，布局，颜色搭配都是他精心的设计。美和丑是没有一个评判标准的。我给他讲了一个关于建筑设计师的故事。<br><br>300多年前，建筑设计师克里斯托&middot;莱伊恩受命设计了英国温泽市政府大厅，他运用工程力学的知识，依据自己多年的实践经验，巧妙地设计了只用一根柱子支撑的大厅天花板。但是一年以后，在进行工程验收时，市政府权威人士却对此提出了质疑，并要求莱伊恩一定要再多加几根柱子。莱伊恩对自己的设计很自信，因此他非常苦恼：坚持自己的主张吧，他们肯定会另找人修改设计；不坚持吧，又有悖自己为人的准则。<br><br><img\r\n              alt=\"\"\r\n              src=\"https://www.yangqq.com/d/file/news/life/2018-03-13/f66c3f82660caa444183b310a13c2f22.jpg\"\r\n            ><br><br>矛盾了很长时间，莱伊恩终于想到了一条妙计，他在大厅里加了四根柱子，但它们并未与天花板连接，只不过是装装样子，糊弄那些刚愎自用的家伙。这个秘密始终没有被发现。直到300多年后市政府准备修缮大厅天花板时，才发现莱伊恩的&ldquo;弄虚作假&rdquo;。我们每个人都想得到别人的尊敬，尤其有了一定的社会地位的人，更想得到别人尊重。建筑设计师克里斯托&middot;莱伊恩很明白这一点，当市政府权威人士对他的建筑设计提出疑问时，他并不坚持己见，而是让市政府权威人士感到他对他们很尊重。所以，一个聪明的人，不仅能维护自己的尊严，还能够顾及他人的尊严。<br><br><img\r\n              alt=\"\"\r\n              src=\"https://www.yangqq.com/d/file/news/life/2018-03-13/49962501843114c70121ad142e60a056.jpg\"\r\n            ><br><br>莱伊恩的故事，向我们讲述了一个深刻的哲理&ldquo;恪守着自己的原则，哪怕遭遇到最大的阻力，也要想办法抵达胜利。&rdquo;<br><br>就拿我自己来说吧，有时候会很矛盾，设计好的作品，不把它分享出来，会觉得待在自己电脑里面实在是没有意义。干脆就发布出去吧。我也害怕收到大家不好的评论，有些评论，可能说者无意，但是对于每一个用心的站长来说，都会受很深的影响，愤怒，恼羞。<br><br>心态很重要，再来看莱伊恩，他当时顶着多大的压力呀。同样作为一个前端设计师，哪怕遭到质疑，我们也要像莱伊恩一样恪守自己的原则。<br><br><img\r\n              alt=\"\"\r\n              src=\"https://www.yangqq.com/d/file/news/life/2018-03-13/89a5cb1d573b094ae3cc8afd7c11fffb.jpg\"\r\n            >\r\n            <p />', '1', NULL, '/static/images/pic06.jpg');
INSERT INTO `cms_article` VALUES (44, 13, 'cms后台管理文档-在线视频教程', NULL, NULL, NULL, NULL, NULL, '2020-08-07 16:37:09', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, '1', NULL, '/static/images/pic02.jpg');
INSERT INTO `cms_article` VALUES (45, 1, '个人博客，属于我的小世界！', NULL, NULL, '个人博客，用来做什么？我刚开始就把它当做一个我吐槽心情的地方，也就相当于一个网络记事本，写上一些关于自己生活工作中的小情小事，也会放上一些照片，音乐。每天工作回家后就能访问自己的网站，一边听着音乐，一边写写文章。', NULL, NULL, '2020-03-10 15:01:43', NULL, 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '写点什么...', '1', NULL, 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg');
INSERT INTO `cms_article` VALUES (46, 16, '设计模式中使用策略模式避免过多if-else', NULL, 'Java,spring,设计模式', '策略模式是一种解耦的方法，它对算法进行封装，使得算法的调用和算法本身分离。使用策略模式，客户端代码不需要调整，算法之间可以互相替换，因为不同的算法实现的是同一个接口。\n\n', 'Vito', NULL, '2021-08-17 23:28:35', '2021-08-17 23:29:38', 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 0, 1, '<p><b>1、场景描述</b></p><p>我们经常在项目中，会看到如下所示if-else过多的代码。如果条件过多的话逻辑就比较混乱，也容易出错。如果新增一种业务，又要来增加一个if else，即难以维护，阅读性也很差。</p><div><pre><code>if(a){\n    \n}else if(b){\n    \n}else if(c){\n    \n}else{\n    \n}</code></pre></div><p><b>什么是策略模式？</b></p><p>策略模式是一种解耦的方法，它对算法进行封装，使得算法的调用和算法本身分离。使用策略模式，客户端代码不需要调整，算法之间可以互相替换，因为不同的算法实现的是同一个接口。</p><p>下面我们就以一个实际例子讲解如何使用策略模式避免使用过多的if-else语句。</p><p><br></p><p><b>2、定义策略接口</b></p><div><pre><code>public interface BusinessExecutor {\n	void handleMessage(String record);\n}</code></pre></div><p><br></p><p><b>3、实现策略</b></p><p>根据不同策略，实现接口，重写处理逻辑。</p><div><pre><code>@Slf4j\n@Component(\"simpleBusinessExecutor\")\npublic class SimpleBusinessExecutor implements BusinessExecutor {\n	@Override\n	public void handleMessage(String record) {\n		log.info(\"simple {}\", record);\n	}\n}</code></pre></div><p><br></p><div><pre><code>@Slf4j\n@Component(\"intentBusinessExecutor\")\npublic class IntentBusinessExecutor implements BusinessExecutor {\n	@Override\n	public void handleMessage(String record) {\n		log.info(\"intent {}\",record);\n	}\n}</code></pre></div><p><br></p><p><b>4、策略管理</b></p><p>定义策略上下文，由于Spring IOC已经通过反射机制将类实例化到容器中了，因此我们只需要根据业务类型获取对象实例，这里我们使用ApplicationContext来获取策略对象实例Bean。</p><div><pre><code>@Slf4j\n@Component\npublic class BusinessExecutorManager {\n\n	@Autowired\n	private ApplicationContext applicationContext;\n\n	public BusinessExecutor getExecutor(Byte type) {\n		BussinessTypeEnum[] values = BussinessTypeEnum.values();\n		if (values.length &lt;= 0) {\n			return null;\n		}\n		for (BussinessTypeEnum value : values) {\n			try {\n				if (Objects.equals(type, value.getCode())) {\n					return (BusinessExecutor) applicationContext.getBean(value.getBeanName());\n				}\n			} catch (Exception e) {\n				log.error(\"获取BusinessExecutor异常\", e);\n				return null;\n			}\n		}\n		return null;\n	}\n\n}</code></pre></div><p>在这一步骤中，我们需要一种方式可以根据业务类型type来反射获取对象的实例，这里使用枚举来维护二者的对应关系。</p><div><pre><code>import lombok.AllArgsConstructor;\nimport lombok.Getter;\nimport lombok.NoArgsConstructor;\n\n@Getter\n@NoArgsConstructor\n@AllArgsConstructor\npublic enum BussinessTypeEnum {\n\n	INTENT_BUSINESS(Byte.parseByte(\"1\"), \"intentBusinessExecutor\", \"简单业务\"),\n	SIMPLE_BUSINESS(Byte.parseByte(\"2\"), \"simpleBusinessExecutor\", \"意图业务\");\n\n	private Byte code;\n	private String beanName;\n	private String desc;\n\n}</code></pre></div><p>但是这里还有一个不够优雅的地方，就是业务类型type和处理类的映射关系还是需要手动维护，不够智能。</p><p><br></p><p><b>5、运行（使用策略）</b></p><div><pre><code>@Slf4j\n@Component\npublic class ModelMessage {\n\n	@Autowired\n	private BusinessExecutorManager businessExecutorManager;\n\n	protected void execute() {\n                Byte bussinessType = Byte.parseByte(\"1\");\n                String message = \"test\";\n		BusinessExecutor businessExecutor = businessExecutorManager.getExecutor(bussinessType);\n		if(businessExecutor!=null){\n			businessExecutor.handleMessage(message);\n		}\n	}\n}</code></pre></div><p><b>结果如下:</b></p><div><pre><code>simple test</code></pre></div><p>现在，如果新增业务逻辑，只需要再增加一个类来处理策略就可以了。每个处理逻辑都互相独立互不干扰。无需增加else-if去处理新增的业务逻辑。</p>', '1', NULL, '');
INSERT INTO `cms_article` VALUES (47, 3, 'springboot 使用 策略模式 去除过多的 if else 或 swich case！', NULL, 'springboot, 策略模式,去除过多的 if else', '发现业务逻辑很多的时候，总会有很多的 if ... else，很多的 if ...else，有的时候就会丢去某些逻辑。有的时候也会用到swich case 来区分不同类型下执行不同的方法。但是往往这种情况的时候，会显得一个方法的代码非常长。为了破解这样的嵌套。我们可以使用策略模式来解决。本篇小编将通过一个示例来破解一下', 'Vito', NULL, '2021-08-17 23:37:41', '2021-08-17 23:38:27', 0, 0, 0, 0, 0, 50, 1, NULL, NULL, NULL, NULL, NULL, NULL, 1, 1, '<p>一、前言<br>      最近写代码的过程中，发现业务逻辑很多的时候，总会有很多的 if ... else，很多的 if ...else，有的时候就会丢去某些逻辑。有的时候也会用到swich case 来区分不同类型下执行不同的方法。但是往往这种情况的时候，会显得一个方法的代码非常长。为了破解这样的嵌套。我们可以使用策略模式来解决。本篇小编将通过一个示例来破解一下。<br><br>二、提供一个需求<br>      我们这里有一个这样的需求，比如，现在有一个活动，活动根据分成了四个阶段：1-5日是预热活动，6-8日是正式活动，9-10是正式活动，11-以后是结束阶段。每个阶段要做的事情是不一样的。<br><br>      当然提供最简单的思路就是：<br><br>      可以通过 swich 或者if ... else 来根据不同的业务逻辑来写不同的业务代码，缺点是代码很长，不容易拓展，而且业务逻辑修改的时候会修改很多的地方。<br><br>       switch (SpringGiftStepEnum.getByValue(step)) {<br>            case PRE_ACTIVITY:<br>                //预热阶段<br>                break;<br>            case IN_ACTIVITY:<br>                //正式活动阶段<br>                break;<br>            case IN_TASK:<br>                //任务阶段<br>                break;<br>            default:<br>                //结束<br>                break;<br>       }<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>三、使用策略模式去除过多的 if else 或 swich case！<br><br><br>      小编处理的业务逻辑是这样的，在service中，通过调用handlerContext来获取抽象类AbstractHandler的实例。<br><br>      而项目再启动的时候，会扫描指定路径下带有我们自定义注解的类，并把类上的注解的值和类的实例作为k-v，放到handlerContext中。<br><br>图<br><br><br>HandlerProcessor，项目启动扫描handler入口<br>      HandlerProcessor：<br><br>      类中指明了扫描 com.soybean.notify.handler.biz 路径下的，带有HandlerType注解的类。<br><br>package com.soybean.notify.handler;<br><br><br>import com.google.common.collect.Maps;<br>import org.springframework.beans.BeansException;<br>import org.springframework.beans.factory.config.BeanFactoryPostProcessor;<br>import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;<br>import org.springframework.stereotype.Component;<br><br>import java.util.Map;<br><br><br>@Component<br>@SuppressWarnings(\"unchecked\")<br>public class HandlerProcessor implements BeanFactoryPostProcessor {<br><br>    private static final String HANDLER_PACKAGE = \"com.soybean.notify.handler.biz\";<br><br>    /**<br>     * 扫描@HandlerType，初始化HandlerContext，将其注册到spring容器<br>     *<br>     * @param beanFactory bean工厂<br>     * @see HandlerType<br>     * @see HandlerContext<br>     */<br>    @Override<br>    public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {<br>        Map&lt;String, Class&gt; handlerMap = Maps.newHashMapWithExpectedSize(3);<br>        ClassScaner.scan(HANDLER_PACKAGE, HandlerType.class).forEach(clazz -&gt; {<br>            String type = clazz.getAnnotation(HandlerType.class).value();<br>            handlerMap.put(type, clazz);<br>        });<br>        HandlerContext context = new HandlerContext(handlerMap);<br>        beanFactory.registerSingleton(HandlerContext.class.getName(), context);<br>    }<br><br>}<br><br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>      HandlerType<br><br>      自定义注解<br><br>package com.soybean.notify.handler;<br><br>import java.lang.annotation.*;<br><br>@Target({ElementType.TYPE})<br>@Retention(RetentionPolicy.RUNTIME)<br>@Documented<br>@Inherited<br>public @interface HandlerType {<br><br>    String value();<br><br>}<br><br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>      ClassScaner<br><br>      根据包路径和注解扫描类<br><br>package com.soybean.notify.handler;<br><br>import org.apache.commons.lang3.ArrayUtils;<br>import org.springframework.beans.factory.BeanDefinitionStoreException;<br>import org.springframework.context.ResourceLoaderAware;<br>import org.springframework.core.io.Resource;<br>import org.springframework.core.io.ResourceLoader;<br>import org.springframework.core.io.support.PathMatchingResourcePatternResolver;<br>import org.springframework.core.io.support.ResourcePatternResolver;<br>import org.springframework.core.io.support.ResourcePatternUtils;<br>import org.springframework.core.type.classreading.CachingMetadataReaderFactory;<br>import org.springframework.core.type.classreading.MetadataReader;<br>import org.springframework.core.type.classreading.MetadataReaderFactory;<br>import org.springframework.core.type.filter.AnnotationTypeFilter;<br>import org.springframework.core.type.filter.TypeFilter;<br>import org.springframework.util.StringUtils;<br>import org.springframework.util.SystemPropertyUtils;<br><br>import java.io.IOException;<br>import java.lang.annotation.Annotation;<br>import java.util.HashSet;<br>import java.util.LinkedList;<br>import java.util.List;<br>import java.util.Set;<br><br>public class ClassScaner implements ResourceLoaderAware {<br><br>    private final List&lt;TypeFilter&gt; includeFilters = new LinkedList&lt;TypeFilter&gt;();<br>    private final List&lt;TypeFilter&gt; excludeFilters = new LinkedList&lt;TypeFilter&gt;();<br><br>    private ResourcePatternResolver resourcePatternResolver = new PathMatchingResourcePatternResolver();<br>    private MetadataReaderFactory metadataReaderFactory = new CachingMetadataReaderFactory(this.resourcePatternResolver);<br><br>    @SafeVarargs<br>    public static Set&lt;Class&lt;?&gt;&gt; scan(String[] basePackages, Class&lt;? extends Annotation&gt;... annotations) {<br>        ClassScaner cs = new ClassScaner();<br><br>        if (ArrayUtils.isNotEmpty(annotations)) {<br>            for (Class anno : annotations) {<br>                cs.addIncludeFilter(new AnnotationTypeFilter(anno));<br>            }<br>        }<br><br>        Set&lt;Class&lt;?&gt;&gt; classes = new HashSet&lt;&gt;();<br>        for (String s : basePackages) {<br>            classes.addAll(cs.doScan(s));<br>        }<br><br>        return classes;<br>    }<br><br>    @SafeVarargs<br>    public static Set&lt;Class&lt;?&gt;&gt; scan(String basePackages, Class&lt;? extends Annotation&gt;... annotations) {<br>        return ClassScaner.scan(StringUtils.tokenizeToStringArray(basePackages, \",; \\t\\n\"), annotations);<br>    }<br><br>    public final ResourceLoader getResourceLoader() {<br>        return this.resourcePatternResolver;<br>    }<br><br>    @Override<br>    public void setResourceLoader(ResourceLoader resourceLoader) {<br>        this.resourcePatternResolver = ResourcePatternUtils<br>                .getResourcePatternResolver(resourceLoader);<br>        this.metadataReaderFactory = new CachingMetadataReaderFactory(<br>                resourceLoader);<br>    }<br><br>    public void addIncludeFilter(TypeFilter includeFilter) {<br>        this.includeFilters.add(includeFilter);<br>    }<br><br>    public void addExcludeFilter(TypeFilter excludeFilter) {<br>        this.excludeFilters.add(0, excludeFilter);<br>    }<br><br>    public void resetFilters(boolean useDefaultFilters) {<br>        this.includeFilters.clear();<br>        this.excludeFilters.clear();<br>    }<br><br>    public Set&lt;Class&lt;?&gt;&gt; doScan(String basePackage) {<br>        Set&lt;Class&lt;?&gt;&gt; classes = new HashSet&lt;&gt;();<br>        try {<br>            String packageSearchPath = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX<br>                    + org.springframework.util.ClassUtils<br>                    .convertClassNameToResourcePath(SystemPropertyUtils<br>                            .resolvePlaceholders(basePackage))<br>                    + \"/**/*.class\";<br>            Resource[] resources = this.resourcePatternResolver<br>                    .getResources(packageSearchPath);<br><br>            for (int i = 0; i &lt; resources.length; i++) {<br>                Resource resource = resources[i];<br>                if (resource.isReadable()) {<br>                    MetadataReader metadataReader = this.metadataReaderFactory.getMetadataReader(resource);<br>                    if ((includeFilters.size() == 0 &amp;&amp; excludeFilters.size() == 0) || matches(metadataReader)) {<br>                        try {<br>                            classes.add(Class.forName(metadataReader<br>                                    .getClassMetadata().getClassName()));<br>                        } catch (ClassNotFoundException e) {<br>                            e.printStackTrace();<br>                        }<br>                    }<br>                }<br>            }<br>        } catch (IOException ex) {<br>            throw new BeanDefinitionStoreException(<br>                    \"I/O failure during classpath scanning\", ex);<br>        }<br>        return classes;<br>    }<br><br>    protected boolean matches(MetadataReader metadataReader) throws IOException {<br>        for (TypeFilter tf : this.excludeFilters) {<br>            if (tf.match(metadataReader, this.metadataReaderFactory)) {<br>                return false;<br>            }<br>        }<br>        for (TypeFilter tf : this.includeFilters) {<br>            if (tf.match(metadataReader, this.metadataReaderFactory)) {<br>                return true;<br>            }<br>        }<br>        return false;<br>    }<br><br>}<br><br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br>78<br>79<br>80<br>81<br>82<br>83<br>84<br>85<br>86<br>87<br>88<br>89<br>90<br>91<br>92<br>93<br>94<br>95<br>96<br>97<br>98<br>99<br>100<br>101<br>102<br>103<br>104<br>105<br>106<br>107<br>108<br>109<br>110<br>111<br>112<br>113<br>114<br>115<br>116<br>117<br>118<br>119<br>120<br>121<br>122<br>123<br>124<br>125<br>126<br>127<br>128<br>129<br>      HandlerContext<br><br>      根据类型实例化抽象类<br><br>package com.soybean.notify.handler;<br><br>import java.util.Map;<br><br>/**<br> * @Author: <br> * @Description: 处理器上下文，根据类型获取相应的处理器<br> * @Date: Created in 10:07 2019/2/2<br> */<br>@SuppressWarnings(\"unchecked\")<br>public class HandlerContext {<br><br>    private Map&lt;String, Class&gt; handlerMap;<br><br>    public HandlerContext(Map&lt;String, Class&gt; handlerMap) {<br>        this.handlerMap = handlerMap;<br>    }<br><br>    public AbstractHandler getInstance(String type) {<br>        Class clazz = handlerMap.get(type);<br>        if (clazz == null) {<br>            throw new IllegalArgumentException(\"not found handler for type: \" + type);<br>        }<br>        return (AbstractHandler) BeanTool.getBean(clazz);<br>    }<br><br>}<br><br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>      BeanTool<br><br>package com.soybean.notify.handler;<br><br>import org.springframework.beans.BeansException;<br>import org.springframework.context.ApplicationContext;<br>import org.springframework.context.ApplicationContextAware;<br>import org.springframework.stereotype.Component;<br><br>@Component<br>public class BeanTool implements ApplicationContextAware {<br><br>    private static ApplicationContext applicationContext;<br><br>    @Override<br>    public void setApplicationContext(ApplicationContext context) throws BeansException {<br>        if (applicationContext == null) {<br>            applicationContext = context;<br>        }<br>    }<br><br>    public static Object getBean(String name) {<br>        return applicationContext.getBean(name);<br>    }<br><br>    public static &lt;T&gt; T getBean(Class&lt;T&gt; clazz) {<br>        return applicationContext.getBean(clazz);<br>    }<br><br>}<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>      AbstractHandler<br><br>      抽象方法类<br><br>package com.soybean.notify.handler;<br><br>import com.soybean.notify.bo.OrderBO;<br><br>public abstract class AbstractHandler {<br><br>    abstract public String handle(OrderBO bo);<br><br>}<br><br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>      业务类1<br><br>package com.soybean.notify.handler.biz;<br><br><br>import com.soybean.notify.bo.OrderBO;<br>import com.soybean.notify.handler.AbstractHandler;<br>import com.soybean.notify.handler.HandlerType;<br>import org.springframework.stereotype.Component;<br><br><br>@Component<br>@HandlerType(\"1\")<br>public class NormalHandler extends AbstractHandler {<br><br>    @Override<br>    public String handle(OrderBO bo) {<br>        return \"处理普通订单\";<br>    }<br><br>}<br><br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>      业务类2<br><br>package com.soybean.notify.handler.biz;<br><br>import com.soybean.notify.bo.OrderBO;<br>import com.soybean.notify.handler.AbstractHandler;<br>import com.soybean.notify.handler.HandlerType;<br>import org.springframework.stereotype.Component;<br><br><br>@Component<br>@HandlerType(\"2\")<br>public class GroupHandler extends AbstractHandler {<br><br>    @Override<br>    public String handle(OrderBO bo) {<br>        return \"处理团购订单\";<br>    }<br><br>}<br><br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>      业务类3<br><br>package com.soybean.notify.handler.biz;<br><br><br>import com.soybean.notify.bo.OrderBO;<br>import com.soybean.notify.handler.AbstractHandler;<br>import com.soybean.notify.handler.HandlerType;<br>import org.springframework.stereotype.Component;<br><br><br>@Component<br>@HandlerType(\"3\")<br>public class PromotionHandler extends AbstractHandler {<br><br>    @Override<br>    public String handle(OrderBO bo) {<br>        return \"处理促销订单\";<br>    }<br><br>}<br><br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>四、小结<br>      策略模式的作用：就是把具体的算法实现从业务逻辑中剥离出来，成为一系列独立算法类，使得它们可以相互替换。<br><br>      在我们可以通过继续写心的业务逻辑类，来拓展我们的代码，这个是非常方便的，基本serviceImpl的类中是不用修改的。可以增加新的东西，不用修改旧的东西，这个正好是设计模式里面的开闭原则。<br><br>      在demo中，是通过项目开始的时候扫描指定包下的handler类，然后根据传入的type来从map中找出实例。<br>————————————————<br>版权声明：本文为CSDN博主「AresCarry」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：https://blog.csdn.net/kisscatforever/article/details/89432158</p>', '1', NULL, '');

-- ----------------------------
-- Records of cms_category
-- ----------------------------
INSERT INTO `cms_category` VALUES (1, 0, '技术博客', 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg', NULL, NULL, NULL, NULL, 50, 1, '2020-03-11 17:01:53', NULL, 1);
INSERT INTO `cms_category` VALUES (2, 0, '产品案例', 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg', NULL, NULL, NULL, NULL, 50, 1, '2020-03-11 17:01:56', NULL, 1);
INSERT INTO `cms_category` VALUES (3, 1, '博客日记', 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg', NULL, NULL, NULL, NULL, 50, 1, '2020-03-11 17:02:00', NULL, 1);
INSERT INTO `cms_category` VALUES (4, 0, 'SEO优化排云', 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg', NULL, NULL, NULL, '', 50, 1, '2020-03-11 01:37:35', NULL, 0);
INSERT INTO `cms_category` VALUES (5, 2, '个人网站', 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg', NULL, NULL, NULL, NULL, 50, 1, '2020-07-30 22:09:01', NULL, 1);
INSERT INTO `cms_category` VALUES (6, 0, '技术推广', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (7, 0, '资源下载', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (8, 0, '程序人生', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (9, 2, '企业网站', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (10, 2, '事业单位', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (11, 2, '网购商城', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (12, 0, '视频教程', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (13, 12, '前端设计', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (14, 12, 'JS教程', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (15, 12, 'CMS教程', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (16, 1, '程序人生', 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg', NULL, NULL, NULL, NULL, 50, 1, '2020-03-11 17:02:00', NULL, 1);
INSERT INTO `cms_category` VALUES (17, 1, '设计管理', 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg', NULL, NULL, NULL, NULL, 50, 1, '2020-03-11 17:02:00', NULL, 1);
INSERT INTO `cms_category` VALUES (18, 1, '程序规划', 'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1583516138829&di=4563a726aded35f2b93671fa22a88a95&imgtype=0&src=http%3A%2F%2Fa1.att.hudong.com%2F68%2F58%2F01200000032867136324584203261.jpg', NULL, NULL, NULL, NULL, 50, 1, '2020-03-11 17:02:00', NULL, 1);
INSERT INTO `cms_category` VALUES (19, 4, '百度SEO', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (20, 4, 'SEO专业术语', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (21, 4, 'SEO常见问题', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (22, 6, '网络推广', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (23, 6, '品牌营销', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (24, 6, '意识思维', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (25, 7, '网页制作', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (26, 7, 'FTP工具', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (27, 7, '编程软件', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);
INSERT INTO `cms_category` VALUES (28, 7, 'jQuery插件', NULL, NULL, NULL, NULL, NULL, 50, 1, NULL, NULL, 1);

-- ----------------------------
-- Records of cms_navigation
-- ----------------------------
INSERT INTO `cms_navigation` VALUES (1, 0, '首页', '/', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (2, 0, '技术博客', '/blog', 1, NULL, 49);
INSERT INTO `cms_navigation` VALUES (3, 2, '博客日记', '/blog/3', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (4, 0, '鹰视商城', 'https://www.dev56.com', 1, '_blank', 35);
INSERT INTO `cms_navigation` VALUES (5, 0, '关于我们', '/me', 1, NULL, 30);
INSERT INTO `cms_navigation` VALUES (7, 2, '程序人生', '/blog/16', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (8, 0, '设计案例', '/cases', 1, NULL, 48);
INSERT INTO `cms_navigation` VALUES (9, 8, '个人网站', '/cases/5', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (10, 8, '企业网站', '/cases/9', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (11, 8, '事业单位', '/cases/10', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (12, 8, '网购商城', '/cases/11', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (13, 0, '视频教程', '/video', 1, NULL, 47);
INSERT INTO `cms_navigation` VALUES (14, 13, '前端设计', '/video/13', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (15, 13, 'JS教程', '/video/14', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (16, 13, 'CMS教程', '/video/15', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (17, 0, '资源下载', '/source', 0, NULL, 46);
INSERT INTO `cms_navigation` VALUES (18, 17, '网页制作', '/cource-c/网页制作', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (19, 17, 'FTP工具', '/cource-c/FTP工具', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (20, 17, '编程软件', '/cource-c/编程软件', 1, NULL, 50);
INSERT INTO `cms_navigation` VALUES (21, 0, '模板商城', '/project', 0, NULL, 45);
INSERT INTO `cms_navigation` VALUES (22, 17, 'jQuery插件', '/cource-c/jQuery插件', 1, NULL, 50);

SET FOREIGN_KEY_CHECKS = 1;